package com.betaben.inventory;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;
import javax.swing.border.EmptyBorder;

public class Main extends JFrame {

	private JPanel contentPane;

	public static Library library = new Library();
	private JTextField nameTextField;
	private JTextField priceTextField;
	
	public static String nameText;
	public static Double priceText;
	
	public static HashMap<ItemPanel, Item> hashes = new HashMap<ItemPanel, Item>();
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Main frame = new Main();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Main() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel scrollPanel = new JPanel();
		scrollPanel.setPreferredSize(new Dimension(141, 1000));
		scrollPanel.setLayout(null);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(292, 25, 141, 247);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		scrollPane.setViewportView(scrollPanel);
		contentPane.add(scrollPane);
		
		JLabel lblInventory = new JLabel("Inventory:");
		lblInventory.setBounds(292, 6, 141, 16);
		contentPane.add(lblInventory);
		
		nameTextField = new JTextField();
		nameTextField.setBounds(6, 25, 274, 26);
		contentPane.add(nameTextField);
		nameTextField.setColumns(10);
		
		priceTextField = new JTextField();
		priceTextField.setBounds(6, 91, 274, 26);
		contentPane.add(priceTextField);
		priceTextField.setColumns(10);
		
		JLabel lblItemName = new JLabel("Item Name:");
		lblItemName.setBounds(6, 6, 80, 16);
		contentPane.add(lblItemName);
		
		JLabel lblItemPrice = new JLabel("Item Price:");
		lblItemPrice.setBounds(6, 63, 80, 16);
		contentPane.add(lblItemPrice);
		
		JLabel lbldisplay = new JLabel("");
		lbldisplay.setBounds(6, 170, 274, 45);
		contentPane.add(lbldisplay);
		
		JButton btnAddItem = new JButton("Add Item");
		btnAddItem.setBounds(6, 227, 272, 45);
		btnAddItem.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				String vowels = "aeiou";
				nameText = nameTextField.getText();
				if(priceTextField.getText().isEmpty()){
					priceText = 0.00;
				} else {
					priceText = Double.parseDouble(priceTextField.getText());
				}
				Item item = new Item(nameText, priceText);
				library.addItem(item);
				System.out.println("\nItem Name: " + "\t\tItem Price: ");
				for(Item items : library.getItems()){
					
					System.out.println(items.getName() + "\t\t$" + items.getPrice());
					
				}
				if(vowels.indexOf(Character.toLowerCase(nameText.charAt(0))) != -1){
					lbldisplay.setText("<html>An " + nameText + " was added to your inventory.<html>");
				} else {
					lbldisplay.setText("<html>A " + nameText + " was added to your inventory.<html>");
				}
				
				ItemPanel panel = new ItemPanel(scrollPanel, nameText, "$" + priceTextField.getText());
				ItemPanel.yPos += 75;
				scrollPanel.add(panel);
				
				hashes.put(panel, item);
				
				nameTextField.setText("");
				priceTextField.setText("");
				
				scrollPanel.revalidate();
				scrollPanel.repaint();
				
				scrollPane.revalidate();
				scrollPane.repaint();
				
				contentPane.revalidate();
				contentPane.repaint();
			}
		});
		contentPane.add(btnAddItem);
		
		contentPane.getRootPane().setDefaultButton(btnAddItem);
	}
}
